for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
I_n <- 10/2
fisher.scoring <- function(init, fun, I_n, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x + fun(x)/I_n
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(fisher.scoring(init[i], dev1_log_sum, I_n)$root, dev1_log_sum, dev2_log_sum)$root
}
library("ggplot2")
options(digits = 8)
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fisher Scoring and Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
options(digits = 8)
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fisher Scoring and Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
bookdow::renderbook("index.Rmd", "pdf_book")
bookdown::renderbook("index.Rmd", "pdf_book")
bookdown::render_book("index.Rmd", "pdf_book")
bookdown::render_book("index.Rmd", "pdf_book")
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
fixed.point <- function(init, fun, alpha, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- alpha * fun(x) + x
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res1 <- data.frame(init = init, root = rep(NA, length(init)))
res2 <- data.frame(init = init, root = rep(NA, length(init)))
res3 <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res1$root[i] <- fixed.point(init[i], dev1_log_sum, 1)$root
}
for (i in 1:length(init)) {
res2$root[i] <- fixed.point(init[i], dev1_log_sum, 0.64)$root
}
for (i in 1:length(init)) {
res3$root[i] <- fixed.point(init[i], dev1_log_sum, 0.25)$root
}
library("ggplot2")
library("gridExtra")
p1 <- ggplot(res1, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res1$init), max(res1$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 1))
p2 <- ggplot(res2, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res2$init), max(res2$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.64))
p3 <- ggplot(res3, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res3$init), max(res3$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.25))
grid.arrange(p1, p2, p3, nrow = 3)
View(res3)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
I_n <- 10/2
fisher.scoring <- function(init, fun, I_n, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x + fun(x)/I_n
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(fisher.scoring(init[i], dev1_log_sum, I_n)$root,
dev1_log_sum, dev2_log_sum)$root
}
library("ggplot2")
options(digits = 8)
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fisher Scoring and Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
View(res)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(init[i], dev1_log_sum, dev2_log_sum)$root
}
res_trans <- t(as.matrix(round(res, 2)))
rownames(res_trans) <- c("Initial Values", "Roots")
library("pander")
library("ggplot2")
pander(res_trans, split.table = 100, style = 'rmarkdown')
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
View(res)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
I_n <- 10/2
fisher.scoring <- function(init, fun, I_n, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x + fun(x)/I_n
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(fisher.scoring(init[i], dev1_log_sum, I_n)$root,
dev1_log_sum, dev2_log_sum)$root
}
library("ggplot2")
options(digits = 8)
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fisher Scoring and Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
View(res)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
fixed.point <- function(init, fun, alpha, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- alpha * fun(x) + x
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res1 <- data.frame(init = init, root = rep(NA, length(init)))
res2 <- data.frame(init = init, root = rep(NA, length(init)))
res3 <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res1$root[i] <- fixed.point(init[i], dev1_log_sum, 1)$root
}
for (i in 1:length(init)) {
res2$root[i] <- fixed.point(init[i], dev1_log_sum, 0.64)$root
}
for (i in 1:length(init)) {
res3$root[i] <- fixed.point(init[i], dev1_log_sum, 0.25)$root
}
library("ggplot2")
library("gridExtra")
p1 <- ggplot(res1, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res1$init), max(res1$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 1))
p2 <- ggplot(res2, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res2$init), max(res2$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.64))
p3 <- ggplot(res3, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res3$init), max(res3$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.25))
grid.arrange(p1, p2, p3, nrow = 3)
View(res2)
View(res3)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(init[i], dev1_log_sum, dev2_log_sum)$root
}
res_trans <- t(as.matrix(round(res, 2)))
rownames(res_trans) <- c("Initial Values", "Roots")
library("pander")
library("ggplot2")
pander(res_trans, split.table = 100, style = 'rmarkdown')
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(init[i], dev1_log_sum, dev2_log_sum)$root
}
res_trans <- t(as.matrix(round(res, 2)))
rownames(res_trans) <- c("Initial Values", "Roots")
library("pander")
library("ggplot2")
pander(res_trans, split.table = 100, style = 'rmarkdown')
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
View(res)
newton.raphson(3, dev1_log_sum, dev2_log_sum)
newton.raphson(5, dev1_log_sum, dev2_log_sum)
newton.raphson(7, dev1_log_sum, dev2_log_sum)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
fixed.point <- function(init, fun, alpha, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- alpha * fun(x) + x
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res1 <- data.frame(init = init, root = rep(NA, length(init)))
res2 <- data.frame(init = init, root = rep(NA, length(init)))
res3 <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res1$root[i] <- fixed.point(init[i], dev1_log_sum, 1)$root
}
for (i in 1:length(init)) {
res2$root[i] <- fixed.point(init[i], dev1_log_sum, 0.64)$root
}
for (i in 1:length(init)) {
res3$root[i] <- fixed.point(init[i], dev1_log_sum, 0.25)$root
}
library("ggplot2")
library("gridExtra")
p1 <- ggplot(res1, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res1$init), max(res1$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 1))
p2 <- ggplot(res2, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res2$init), max(res2$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.64))
p3 <- ggplot(res3, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res3$init), max(res3$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fixed-Point") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle(expression("Scatter Plot of Roots vs. Initial Values for"~alpha == 0.25))
grid.arrange(p1, p2, p3, nrow = 3)
fixed.point(3, dev1_log_sum, 0.25)
fixed.point(5, dev1_log_sum, 0.25)
fixed.point(7, dev1_log_sum, 0.25)
set.seed(20180909)
sample <- rcauchy(10, 5)
dev1_log_sum <- function(x){
dev1_log_sum <- 0
for (i in 1:length(sample)) {
dev1_log_sum <- dev1_log_sum - 2 * (x - sample[i])/(1 + (x - sample[i])^2)
}
dev1_log_sum
}
dev2_log_sum <- function(x){
dev2_log_sum <- 0
for (i in 1:length(sample)) {
dev2_log_sum <- dev2_log_sum - 2 * (1 - (x - sample[i])^2)/(1 + (x - sample[i])^2)^2
}
dev2_log_sum
}
I_n <- 10/2
fisher.scoring <- function(init, fun, I_n, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x + fun(x)/I_n
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
newton.raphson <- function(init, fun, fun.dev, maxiter = 100, tol = .Machine$double.eps^0.2){
x <- init
for (i in 1:maxiter) {
x1 <- x -fun(x)/fun.dev(x)
if(abs(x1 - x) < tol) break
x <- x1
}
if(i == maxiter)
message("Reached the maximum iteration!")
return(data.frame(root = x1, iter = i))
}
init <- seq(-10, 20, by = 0.5)
res <- data.frame(init = init, root = rep(NA, length(init)))
for (i in 1:length(init)) {
res$root[i] <- newton.raphson(fisher.scoring(init[i], dev1_log_sum, I_n)$root,
dev1_log_sum, dev2_log_sum)$root
}
library("ggplot2")
options(digits = 8)
ggplot(res, aes(x = init, y = root)) + geom_point() +
scale_x_continuous(breaks = round(seq(min(res$init), max(res$init), by = 1),1)) +
labs(x = "Initial Values", y = "Roots from Fisher Scoring and Newton-Raphson") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Scatter Plot of Roots vs. Initial Values")
fisher.scoring(3,dev1_log_sum,I_n)
newton.raphson(fisher.scoring(3,dev1_log_sum,I_n)$root, dev1_log_sum, dev2_log_sum)
fisher.scoring(5,dev1_log_sum,I_n)
newton.raphson(fisher.scoring(5,dev1_log_sum,I_n)$root, dev1_log_sum, dev2_log_sum)
fisher.scoring(7,dev1_log_sum,I_n)
newton.raphson(fisher.scoring(7,dev1_log_sum,I_n)$root, dev1_log_sum, dev2_log_sum)
bookdown::render_book("index.Rmd", "pdf_book")
